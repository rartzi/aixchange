name: Deploy to Production

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: azu-oncology-rd-self-hosted-linux

    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.2.1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: "ec2-user"
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          fingerprint: "YGzIIs5UPnSTncfGxMehgz/IzoFhXq0YYDaUDkgWyhs"

          script: |
            # Clean up previous deployment if exists
            rm -rf /data/aixplore
            
            # Create directory if not exists
            mkdir -p /data

            # Clone repository with token
            cd /data/
            git clone https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} aixplore
            cd aixplore

            # Check if .env exists and is valid
            if [ ! -f /data/aixplore/env/.env ]; then
              echo "Creating .env from secrets"
              mkdir -p env
              echo "${{ secrets.ENV_FILE }}" > env/.env
            fi

            # Build and restart containers
            docker compose pull || exit 1
            docker compose build --no-cache || exit 1
            docker compose down || true # Don't fail if no containers running
            docker compose up -d || exit 1

            # Check if containers are running
            if ! docker compose ps | grep -q "Up"; then
              echo "Error: Containers failed to start"
              docker compose logs
              exit 1
            fi
