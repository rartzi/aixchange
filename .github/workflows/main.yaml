name: Deploy to Production

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: azu-oncology-rd-self-hosted-linux

    steps:
      - name: Deploy with Appleboy SSH
        uses: appleboy/ssh-action@v1.2.1
        with:
          host: portal.aixplore.odsp.astrazeneca.net
          username: ec2-user
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Проверяем и создаем директорию если нужно
            if [ ! -d "/data" ]; then
              sudo mkdir -p /data
              sudo chown ec2-user:ec2-user /data
            fi
            
            cd /data
            
            # Проверяем существует ли директория с проектом
            if [ -d "aixplore" ]; then
              echo "Directory exists, stopping containers..."
              cd aixplore
              sudo docker compose down || true
              cd ..
            fi
            
            # Удаляем старую версию и клонируем новую
            sudo rm -rf aixplore
            echo "Cloning fresh repository..."
            sudo git clone https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} aixplore
            sudo chown -R ec2-user:ec2-user aixplore
            
            cd aixplore
            
            # Создаем .env если не существует
            if [ ! -f "env/.env" ]; then
              echo "Creating .env file..."
              sudo mkdir -p env
              echo "${{ secrets.ENV_FILE }}" | sudo tee env/.env > /dev/null
              sudo chown -R ec2-user:ec2-user env
            fi
            
            # Проверяем и создаем директорию для внешних изображений
            if [ ! -d "external-images" ]; then
              sudo mkdir -p external-images
              sudo chown ec2-user:ec2-user external-images
            fi
            
            echo "Building and starting containers..."
            # Запускаем контейнеры
            sudo docker compose pull || exit 1
            sudo docker compose build --no-cache || exit 1
            sudo docker compose up -d || exit 1
            
            # Проверяем что контейнеры запущены
            echo "Checking containers status..."
            sleep 10 # Даем время на запуск
            if ! sudo docker compose ps | grep -q "Up"; then
              echo "Error: Containers failed to start"
              sudo docker compose logs
              exit 1
            fi
            
            echo "Deployment successful!"
