version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
      target: development
    ports:
      - "3000:3000"
      - "9229:9229" # Node.js debugging port
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - NODE_ENV=development
      - NEXTAUTH_URL=${NEXTAUTH_URL}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - UPLOAD_DIR=/app/uploads
      - EXTERNAL_IMAGES_PATH=/app/public/external-images
      - NEXT_TELEMETRY_DISABLED=1
    volumes:
      - .:/app # Mount source code for hot reloading
      - node_modules:/app/node_modules
      - solution_uploads_dev:/app/uploads
      - next_cache_dev:/app/.next/cache
      - ./deploy/external-images:/app/public/external-images
    user: "node"
    depends_on:
      db:
        condition: service_healthy
    command: npm run dev
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '1'
          memory: 1G
    networks:
      - aixchange-network-dev
    restart: unless-stopped

  db:
    image: postgres:14-alpine
    ports:
      - "5432:5432" # Expose port for local development
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    networks:
      - aixchange-network-dev
    restart: unless-stopped

networks:
  aixchange-network-dev:
    driver: bridge

volumes:
  postgres_data_dev:
    driver: local
  solution_uploads_dev:
    driver: local
  next_cache_dev:
    driver: local
  node_modules:
    driver: local