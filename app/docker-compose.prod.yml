version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.prod
      target: runner
    ports:
      - "${PORT:-3000}:3000"
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - NODE_ENV=production
      - NEXTAUTH_URL=${NEXTAUTH_URL}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - UPLOAD_DIR=/app/uploads
      - EXTERNAL_IMAGES_PATH=/app/public/external-images
      - NEXT_TELEMETRY_DISABLED=1
    volumes:
      - solution_uploads:/app/uploads
      - next_cache:/app/.next/cache
      - ./deploy/external-images:/app/public/external-images
    user: "nextjs"
    depends_on:
      db:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '2'           # Increased for demo
          memory: 2G          # Increased for demo
        reservations:
          cpus: '1'           # Increased for demo
          memory: 1G          # Increased for demo
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - aixchange-network
    restart: unless-stopped

  db:
    image: postgres:14-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '2'           # Increased for demo
          memory: 2G          # Increased for demo
        reservations:
          cpus: '1'           # Increased for demo
          memory: 1G          # Increased for demo
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - aixchange-network
    restart: unless-stopped

  backup:
    image: postgres:14-alpine
    volumes:
      - ./backups:/backups
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - PGHOST=db
    command: |
      /bin/sh -c '
        while true; do
          DATE=$$(date +%Y%m%d_%H%M%S)
          pg_dump -U $$POSTGRES_USER -d $$POSTGRES_DB -F c -f /backups/backup_$$DATE.dump
          find /backups -type f -mtime +7 -delete
          sleep 86400
        done
      '
    depends_on:
      - db
    networks:
      - aixchange-network
    restart: unless-stopped

networks:
  aixchange-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  solution_uploads:
    driver: local
  next_cache:
    driver: local